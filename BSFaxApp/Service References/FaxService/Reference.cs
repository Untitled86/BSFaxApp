//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace BSFaxApp.FaxService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaxPageChunk", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
    public partial class FaxPageChunk : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] ChunkField;
        
        private System.Guid PageIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Chunk {
            get {
                return this.ChunkField;
            }
            set {
                if ((object.ReferenceEquals(this.ChunkField, value) != true)) {
                    this.ChunkField = value;
                    this.RaisePropertyChanged("Chunk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSError", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
    public partial class WSError : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DetailField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fax", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
    public partial class Fax : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IDField;
        
        private System.Collections.ObjectModel.ObservableCollection<BSFaxApp.FaxService.FaxPage> PagesField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> RecipientsField;
        
        private string SMTPServerField;
        
        private BSFaxApp.FaxService.Fax.SMTPAuthProtocol SMTPServerAuthProtocolField;
        
        private string SMTPServerLoginField;
        
        private string SMTPServerPasswordField;
        
        private int SMTPServerPortField;
        
        private bool SMTPServerUseSSLField;
        
        private string SenderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<BSFaxApp.FaxService.FaxPage> Pages {
            get {
                return this.PagesField;
            }
            set {
                if ((object.ReferenceEquals(this.PagesField, value) != true)) {
                    this.PagesField = value;
                    this.RaisePropertyChanged("Pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Recipients {
            get {
                return this.RecipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsField, value) != true)) {
                    this.RecipientsField = value;
                    this.RaisePropertyChanged("Recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMTPServer {
            get {
                return this.SMTPServerField;
            }
            set {
                if ((object.ReferenceEquals(this.SMTPServerField, value) != true)) {
                    this.SMTPServerField = value;
                    this.RaisePropertyChanged("SMTPServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BSFaxApp.FaxService.Fax.SMTPAuthProtocol SMTPServerAuthProtocol {
            get {
                return this.SMTPServerAuthProtocolField;
            }
            set {
                if ((this.SMTPServerAuthProtocolField.Equals(value) != true)) {
                    this.SMTPServerAuthProtocolField = value;
                    this.RaisePropertyChanged("SMTPServerAuthProtocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMTPServerLogin {
            get {
                return this.SMTPServerLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.SMTPServerLoginField, value) != true)) {
                    this.SMTPServerLoginField = value;
                    this.RaisePropertyChanged("SMTPServerLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMTPServerPassword {
            get {
                return this.SMTPServerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.SMTPServerPasswordField, value) != true)) {
                    this.SMTPServerPasswordField = value;
                    this.RaisePropertyChanged("SMTPServerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SMTPServerPort {
            get {
                return this.SMTPServerPortField;
            }
            set {
                if ((this.SMTPServerPortField.Equals(value) != true)) {
                    this.SMTPServerPortField = value;
                    this.RaisePropertyChanged("SMTPServerPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SMTPServerUseSSL {
            get {
                return this.SMTPServerUseSSLField;
            }
            set {
                if ((this.SMTPServerUseSSLField.Equals(value) != true)) {
                    this.SMTPServerUseSSLField = value;
                    this.RaisePropertyChanged("SMTPServerUseSSL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Fax.SMTPAuthProtocol", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
        public enum SMTPAuthProtocol : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Anonymous = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Basic = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NTLM = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaxPage", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
    public partial class FaxPage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaxStatus", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
    public partial class FaxStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IDField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FaxService.Version1")]
    public interface Version1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Version1/UploadPageChunk", ReplyAction="http://tempuri.org/Version1/UploadPageChunkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BSFaxApp.FaxService.WSError), Action="http://tempuri.org/Version1/UploadPageChunkWSErrorFault", Name="WSError", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
        System.IAsyncResult BeginUploadPageChunk(BSFaxApp.FaxService.FaxPageChunk aPageChunk, System.AsyncCallback callback, object asyncState);
        
        bool EndUploadPageChunk(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Version1/Ping", ReplyAction="http://tempuri.org/Version1/PingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BSFaxApp.FaxService.WSError), Action="http://tempuri.org/Version1/PingWSErrorFault", Name="WSError", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
        System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndPing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Version1/SendFax", ReplyAction="http://tempuri.org/Version1/SendFaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BSFaxApp.FaxService.WSError), Action="http://tempuri.org/Version1/SendFaxWSErrorFault", Name="WSError", Namespace="http://schemas.datacontract.org/2004/07/FaxWebService")]
        System.IAsyncResult BeginSendFax(BSFaxApp.FaxService.Fax composite, System.AsyncCallback callback, object asyncState);
        
        BSFaxApp.FaxService.FaxStatus EndSendFax(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Version1Channel : BSFaxApp.FaxService.Version1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadPageChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadPageChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BSFaxApp.FaxService.FaxStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BSFaxApp.FaxService.FaxStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Version1Client : System.ServiceModel.ClientBase<BSFaxApp.FaxService.Version1>, BSFaxApp.FaxService.Version1 {
        
        private BeginOperationDelegate onBeginUploadPageChunkDelegate;
        
        private EndOperationDelegate onEndUploadPageChunkDelegate;
        
        private System.Threading.SendOrPostCallback onUploadPageChunkCompletedDelegate;
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendFaxDelegate;
        
        private EndOperationDelegate onEndSendFaxDelegate;
        
        private System.Threading.SendOrPostCallback onSendFaxCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Version1Client() {
        }
        
        public Version1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Version1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Version1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Version1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UploadPageChunkCompletedEventArgs> UploadPageChunkCompleted;
        
        public event System.EventHandler<PingCompletedEventArgs> PingCompleted;
        
        public event System.EventHandler<SendFaxCompletedEventArgs> SendFaxCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BSFaxApp.FaxService.Version1.BeginUploadPageChunk(BSFaxApp.FaxService.FaxPageChunk aPageChunk, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadPageChunk(aPageChunk, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BSFaxApp.FaxService.Version1.EndUploadPageChunk(System.IAsyncResult result) {
            return base.Channel.EndUploadPageChunk(result);
        }
        
        private System.IAsyncResult OnBeginUploadPageChunk(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BSFaxApp.FaxService.FaxPageChunk aPageChunk = ((BSFaxApp.FaxService.FaxPageChunk)(inValues[0]));
            return ((BSFaxApp.FaxService.Version1)(this)).BeginUploadPageChunk(aPageChunk, callback, asyncState);
        }
        
        private object[] OnEndUploadPageChunk(System.IAsyncResult result) {
            bool retVal = ((BSFaxApp.FaxService.Version1)(this)).EndUploadPageChunk(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadPageChunkCompleted(object state) {
            if ((this.UploadPageChunkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadPageChunkCompleted(this, new UploadPageChunkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadPageChunkAsync(BSFaxApp.FaxService.FaxPageChunk aPageChunk) {
            this.UploadPageChunkAsync(aPageChunk, null);
        }
        
        public void UploadPageChunkAsync(BSFaxApp.FaxService.FaxPageChunk aPageChunk, object userState) {
            if ((this.onBeginUploadPageChunkDelegate == null)) {
                this.onBeginUploadPageChunkDelegate = new BeginOperationDelegate(this.OnBeginUploadPageChunk);
            }
            if ((this.onEndUploadPageChunkDelegate == null)) {
                this.onEndUploadPageChunkDelegate = new EndOperationDelegate(this.OnEndUploadPageChunk);
            }
            if ((this.onUploadPageChunkCompletedDelegate == null)) {
                this.onUploadPageChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadPageChunkCompleted);
            }
            base.InvokeAsync(this.onBeginUploadPageChunkDelegate, new object[] {
                        aPageChunk}, this.onEndUploadPageChunkDelegate, this.onUploadPageChunkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BSFaxApp.FaxService.Version1.BeginPing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime BSFaxApp.FaxService.Version1.EndPing(System.IAsyncResult result) {
            return base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BSFaxApp.FaxService.Version1)(this)).BeginPing(callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            System.DateTime retVal = ((BSFaxApp.FaxService.Version1)(this)).EndPing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new PingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        public void PingAsync(object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, null, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BSFaxApp.FaxService.Version1.BeginSendFax(BSFaxApp.FaxService.Fax composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendFax(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BSFaxApp.FaxService.FaxStatus BSFaxApp.FaxService.Version1.EndSendFax(System.IAsyncResult result) {
            return base.Channel.EndSendFax(result);
        }
        
        private System.IAsyncResult OnBeginSendFax(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BSFaxApp.FaxService.Fax composite = ((BSFaxApp.FaxService.Fax)(inValues[0]));
            return ((BSFaxApp.FaxService.Version1)(this)).BeginSendFax(composite, callback, asyncState);
        }
        
        private object[] OnEndSendFax(System.IAsyncResult result) {
            BSFaxApp.FaxService.FaxStatus retVal = ((BSFaxApp.FaxService.Version1)(this)).EndSendFax(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendFaxCompleted(object state) {
            if ((this.SendFaxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendFaxCompleted(this, new SendFaxCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendFaxAsync(BSFaxApp.FaxService.Fax composite) {
            this.SendFaxAsync(composite, null);
        }
        
        public void SendFaxAsync(BSFaxApp.FaxService.Fax composite, object userState) {
            if ((this.onBeginSendFaxDelegate == null)) {
                this.onBeginSendFaxDelegate = new BeginOperationDelegate(this.OnBeginSendFax);
            }
            if ((this.onEndSendFaxDelegate == null)) {
                this.onEndSendFaxDelegate = new EndOperationDelegate(this.OnEndSendFax);
            }
            if ((this.onSendFaxCompletedDelegate == null)) {
                this.onSendFaxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendFaxCompleted);
            }
            base.InvokeAsync(this.onBeginSendFaxDelegate, new object[] {
                        composite}, this.onEndSendFaxDelegate, this.onSendFaxCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override BSFaxApp.FaxService.Version1 CreateChannel() {
            return new Version1ClientChannel(this);
        }
        
        private class Version1ClientChannel : ChannelBase<BSFaxApp.FaxService.Version1>, BSFaxApp.FaxService.Version1 {
            
            public Version1ClientChannel(System.ServiceModel.ClientBase<BSFaxApp.FaxService.Version1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUploadPageChunk(BSFaxApp.FaxService.FaxPageChunk aPageChunk, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = aPageChunk;
                System.IAsyncResult _result = base.BeginInvoke("UploadPageChunk", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUploadPageChunk(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UploadPageChunk", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Ping", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndPing(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("Ping", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendFax(BSFaxApp.FaxService.Fax composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("SendFax", _args, callback, asyncState);
                return _result;
            }
            
            public BSFaxApp.FaxService.FaxStatus EndSendFax(System.IAsyncResult result) {
                object[] _args = new object[0];
                BSFaxApp.FaxService.FaxStatus _result = ((BSFaxApp.FaxService.FaxStatus)(base.EndInvoke("SendFax", _args, result)));
                return _result;
            }
        }
    }
}
